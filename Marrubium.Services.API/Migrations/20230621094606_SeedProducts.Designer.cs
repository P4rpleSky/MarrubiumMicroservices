// <auto-generated />
using Marrubium.Services.ProductAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Marrubium.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230621094606_SeedProducts")]
    partial class SeedProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.5.23280.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Marrubium.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Functions")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("ProductTypes")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("SkinTypes")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "",
                            Functions = "[\"Rejuvenating\",\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/1_1.png",
                            Name = "Cream with retinol",
                            Price = 1000,
                            ProductTypes = "[\"Lotion\"]",
                            SkinTypes = "[\"Soft\"]"
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "",
                            Functions = "[\"Rejuvenating\"]",
                            ImageUrl = "https://images.bsite.net/products/1_2.png",
                            Name = "Lotion with centella",
                            Price = 1500,
                            ProductTypes = "[\"Serum\"]",
                            SkinTypes = "[\"Soft\",\"Sensitive\"]"
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "",
                            Functions = "[\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/1_3.png",
                            Name = "Serum with green tea",
                            Price = 1200,
                            ProductTypes = "[\"Serum\"]",
                            SkinTypes = "[\"Soft\"]"
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "",
                            Functions = "[\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/1_4.png",
                            Name = "Serum with wormwood",
                            Price = 1600,
                            ProductTypes = "[\"Serum\"]",
                            SkinTypes = "[\"Soft\"]"
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "",
                            Functions = "[\"Rejuvenating\",\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/2_1.png",
                            Name = "Scrub with vanilla",
                            Price = 900,
                            ProductTypes = "[\"Cleaning\"]",
                            SkinTypes = "[\"Soft\",\"Sensitive\"]"
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "",
                            Functions = "[\"Rejuvenating\",\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/2_2.png",
                            Name = "Under-eye cream",
                            Price = 2000,
                            ProductTypes = "[\"Lotion\"]",
                            SkinTypes = "[\"Sensitive\"]"
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "",
                            Functions = "[\"Rejuvenating\"]",
                            ImageUrl = "https://images.bsite.net/products/2_3.png",
                            Name = "Cream with mint",
                            Price = 1000,
                            ProductTypes = "[\"Lotion\"]",
                            SkinTypes = "[\"Soft\",\"Sensitive\"]"
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "",
                            Functions = "[\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/2_4.png",
                            Name = "Clay mask with matcha",
                            Price = 800,
                            ProductTypes = "[\"Mask\"]",
                            SkinTypes = "[\"Sensitive\"]"
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "",
                            Functions = "[\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/3_1.png",
                            Name = "The handle of the shovel",
                            Price = 500,
                            ProductTypes = "[\"Mask\"]",
                            SkinTypes = "[\"Rough\"]"
                        },
                        new
                        {
                            ProductId = 10,
                            Description = "",
                            Functions = "[\"Rejuvenating\",\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/3_2.png",
                            Name = "Garage",
                            Price = 10000,
                            ProductTypes = "[\"Cleaning\"]",
                            SkinTypes = "[\"Rough\"]"
                        },
                        new
                        {
                            ProductId = 11,
                            Description = "",
                            Functions = "[\"Rejuvenating\",\"Restoring\"]",
                            ImageUrl = "https://images.bsite.net/products/3_3.png",
                            Name = "Russian hotdog",
                            Price = 50,
                            ProductTypes = "[\"Serum\"]",
                            SkinTypes = "[\"Rough\"]"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
